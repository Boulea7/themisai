---
description: 
globs: 
alwaysApply: false
---
# 獬豸 Themis AI 前端开发与设计指南

本文档旨在详细描述 "獬豸 Themis AI"（一个法学专业垂直特化大语言模型服务平台）网站的前端架构、设计理念、视觉风格、核心功能、交互体验及动画效果。目标是创建一个专业、值得信赖、信息清晰，并具有现代化美感和流畅交互体验的网站，用户可以通过该网站了解模型能力，并直接与之进行高效的法律咨询与信息获取互动。

## 1. 项目概述与前端架构

獬豸 Themis AI 网站的核心目标是向用户介绍一个专注于法学领域的特化大语言模型，并提供一个直观、易用的交互界面，允许用户通过聊天窗口与模型进行实时交流。网站设计需体现法学领域的专业性和严谨性，同时融入现代网页设计元素，如动态效果和流畅动画，以提升用户体验和参与度。

**核心技术栈建议**：

* **Next.js 14+**：用于构建高性能的 React 应用，支持服务端渲染 (SSR) 或静态站点生成 (SSG) 以优化首屏加载速度和 SEO。其路由系统也易于管理。
* **React 18+**：作为构建用户界面的核心库，利用其最新的特性如 Suspense 和并发模式来优化体验。
* **TypeScript**：为项目提供静态类型检查，增强代码的可维护性和开发效率，减少潜在错误。
* **Tailwind CSS**：一个工具优先的 CSS 框架，用于快速构建自定义用户界面，保持设计一致性。
* **Framer Motion**：用于创建丰富、流畅的动画效果，提升网站的视觉吸引力和交互反馈。
* **Axios / Fetch API**：用于与后端 SiliconFlow API 进行通信，实现与大语言模型的交互。
* **(可选) Zustand 或 Redux Toolkit**：用于管理复杂的全局状态，特别是聊天界面的状态（如消息历史、加载状态等）。对于本项目的需求，React Context API 结合 `useState` 和 `useReducer` 可能也足够。

此架构旨在实现清晰的关注点分离，模块化的组件设计将便于迭代开发和未来功能扩展。

## 2. 设计原则与理念

獬豸 Themis AI 的网站设计遵循以下核心原则：

* **专业性 (Professionalism)**：界面设计需体现法学领域的权威感和严谨性，避免过于花哨或轻浮的元素。
* **信任感 (Trustworthiness)**：通过清晰的信息层级、透明的数据处理说明（如适用）和稳重的视觉风格，建立用户对模型专业能力的信任。
* **清晰性 (Clarity)**：信息传达直接明了，用户可以轻松理解模型的功能、优势和使用方法。
* **现代感 (Modernity)**：采用现代设计语言、流畅的动画和高质量的视觉元素，提供符合时代审美的用户体验。
* **易用性 (Usability)**：交互流程直观简单，特别是聊天窗口的设计，应确保用户可以无障碍地与模型进行交流。
* **引导性 (Guidance)**：通过视觉引导和适时的提示，帮助用户探索模型功能，并有效提问。
* **响应式 (Responsiveness)**：确保在桌面、平板和移动设备上均能提供一致且优质的浏览和使用体验。

## 3. 视觉风格、动画与主题

獬豸 Themis AI 的视觉风格旨在平衡法学领域的专业稳重与现代科技的精致美感，并通过动画特效增强用户体验。

### 3.1 调色板

* **主色调**：
    * 深蓝 (如 `#0A2463` 或 `#1D3557`)：传递专业、稳重、智慧的感受，作为背景或重要区块底色。
    * 中性灰 (如 `#F8F9FA`, `#CED4DA`, `#495057`)：用于文本、辅助元素和区块划分，保持界面的整洁与可读性。
* **强调色/点缀色**：
    * 金色 (如 `#FFC300` 或 `#D4AF37`) 或 科技蓝 (如 `#45A29E`)：用于号召性用语按钮 (CTA)、交互反馈、图标或重要信息的突出显示，增加活力和现代感。
* **功能色**：
    * 成功/信息：一般为强调色或主色调的亮色变体。
    * 警告/错误：标准的警示色，如琥珀色或红色，但需谨慎使用，保持整体专业感。

### 3.2 字体系统

* **标题字体**：选择一款具有现代感的无衬线字体，略显力量感，如 Montserrat, Open Sans Condensed, หรือ Source Han Sans (思源黑体) 的较粗字重。
* **正文字体**：选择一款清晰易读的无衬线字体，如 Open Sans, Lato, Noto Sans SC (思源宋体/黑体) 的常规字重。
* **代码/模型交互字体 (可选)**：可选用等宽字体，如 Fira Code 或 Consolas，用于展示模型的输入输出示例。
* **字号与行高**：遵循易读性原则，设置合适的字号层级和行高，确保内容的可访问性。

### 3.3 布局与间距

* **网格系统**：采用标准的 8px 或 4px 网格系统进行布局和元素间距设计，保证视觉上的规整与和谐。
* **留白**：充分利用留白（Negative Space）来增强内容的可读性，突出重要信息，营造专业、不拥挤的视觉感受。
* **卡片式设计**：可用于展示模型特点、使用案例等信息模块，使内容组织更清晰。

### 3.4 动画与特效 (重点)

动画是提升网站吸引力和交互性的关键。目标是实现既美观又不过分干扰核心内容的动态效果。

* **页面加载动画**：
    * **预加载动画 (Preloader)**：一个简洁、与品牌相关的加载动画（例如，动态的法律天平图标，或抽象的“思考”波纹）。
    * **骨架屏 (Skeleton Screens)**：在内容加载时显示占位符，提升感知性能。
* **滚动触发动画 (Scroll-triggered Animations)**：
    * 当用户向下滚动页面时，各内容区块（如模型特性介绍、使用场景）以平滑的飞入、淡入、缩放等效果逐个展示。可使用 Framer Motion 的 `whileInView` 或 Intersection Observer API 实现。
    * **视差滚动 (Parallax Scrolling)**：在背景或装饰性元素上应用，增加页面的深度感和动态感。
* **英雄区动画 (Hero Section Animation)**：
    * **动态背景**：可以是抽象的、缓慢流动的线条、点阵或与法律概念相关的视觉符号（如缓慢旋转的3D天平、流动的代码片段代表AI思考）。
    * **文字动画**：标题和副标题可以采用逐字出现、打字机效果或优雅的淡入效果。
* **交互反馈动画**：
    * **按钮悬停/点击效果**：颜色渐变、轻微放大/缩小、阴影变化等。
    * **输入框焦点效果**：边框颜色变化、标签上移等。
* **聊天窗口动画**：
    * **消息出现**：新消息（用户和模型的）以气泡形式平滑滑入或淡入。
    * **打字指示器 (Typing Indicator)**：当模型正在“思考”或生成回复时，显示动态的打字指示符。
    * **滚动优化**：新消息出现时，聊天记录自动平滑滚动到底部。
* **过渡动画 (Page Transitions)**：如果网站有多个页面，页面间的切换可以使用淡入淡出或平滑的滑动过渡。

**动画原则**：
* **流畅性**：动画帧率应保持在 60fps，避免卡顿。
* **目的性**：动画应服务于用户体验，如引导注意力、提供反馈、增强理解，而非单纯为了炫技。
* **适度性**：尤其在法学专业网站，动画不宜过于花哨或分散用户对核心内容的注意力。

### 3.5 主题切换 (可选)

* 可考虑提供亮色和暗色主题切换功能，以适应不同用户偏好和使用环境。使用 CSS 变量和 JavaScript (如 `next-themes`) 管理。

## 4. 网站结构与核心页面/区块

网站的核心流程是：**介绍模型 -> 展示能力 -> 引导互动 -> 提供聊天界面**。

### 4.1 页面结构 (单页滚动为主，或少量页面)

* **导航栏 (Navigation Bar)**：
    * 固定在页面顶部或随滚动智能显示/隐藏。
    * 包含：Logo, 模型介绍（锚链接）, 功能特性（锚链接）, 使用方法（锚链接）, (可选) 关于我们/联系方式, (可选) FAQ。
    * 平滑滚动到页面相应区块。

* **英雄区 (Hero Section)**：
    * **目的**：第一眼吸引用户，清晰传达网站核心价值——专业的法学大语言模型。
    * **内容**：
        * 引人注目的标题 (e.g., "獬豸 Themis AI: 您身边的智能法律顾问", "探索法学新边界，与AI对话未来")。
        * 简洁的副标题或价值主张，说明模型能解决什么问题或带来什么价值。
        * 一个明确的号召性用语按钮 (CTA)，例如 "开始咨询" 或 "了解更多"，点击后平滑滚动到聊天窗口区域或模型介绍区。
        * (如3.4所述) 具有吸引力的背景动画或视觉元素。

* **模型介绍区块 (Introduction Section)**：
    * 详细介绍此法学大语言模型的背景、训练数据特点（在合规前提下）、专业领域覆盖范围（如合同法、知识产权法、劳动法等）。
    * 突出其作为“垂直特化”模型的优势。
    * 内容呈现可结合图标、简洁文本和滚动动画。

* **功能特性区块 (Features Section)**：
    * 以卡片式布局或列表形式，展示模型的核心功能和优势。
    * 例如：法律条文查询、案例分析辅助、合同草拟建议、法律意见生成、法律术语解释等。
    * 每个特性配以简洁的图标和说明文字。
    * 可加入轻微的悬停动画效果。

* **使用场景/优势区块 (Use Cases / Benefits Section)**：
    * 展示模型在不同场景下的应用，或能为用户带来的具体益处（如提高效率、降低成本、辅助决策）。
    * 可以图文结合，或使用简化的流程图展示。

* **“巨大”的聊天窗口区块 (LLM Interaction Section - The "Main Event")**：
    * **设计**：此区域应在视觉上占据显著位置，可以是页面中一个宽度较大、高度适宜的固定区域，或者是向下滚动后占据整个视口的主要部分。
    * **组件构成**：
        * **消息显示区**：清晰展示用户提问和模型回答。用户和模型的发言气泡样式应有区分（颜色、对齐方式）。支持代码块、列表等格式化文本的渲染。
        * **输入区**：一个舒适的文本输入框（可自适应高度），一个清晰的“发送”按钮。可考虑加入语音输入按钮（若API支持）。
        * **示例问题/引导语**：在聊天开始前，可以提供一些示例问题或引导用户如何有效提问。
        * **功能按钮 (可选)**：如清除聊天记录、复制回答、反馈模型回答质量等。
    * **交互**：
        * 用户输入问题，按下回车或点击发送按钮。
        * 发送后，输入框清空，用户消息出现在消息区。
        * 显示模型“思考中”的动画提示。
        * 模型回复后，其消息出现在消息区，并自动滚动到最新消息。
        * 与 SiliconFlow API 的交互应有明确的加载和错误状态处理。

* **免责声明/使用须知区块 (Disclaimer Section)**：
    * **重要**：对于法学AI，必须包含清晰的免责声明，强调模型输出仅供参考，不能替代专业律师的意见，不构成法律建议。
    * 此区块应易于查找和阅读。

* **页脚 (Footer)**：
    * 版权信息、联系方式（可选）、隐私政策链接、服务条款链接等。

## 5. 组件结构建议

采用模块化、原子化的组件设计思想。

* **原子组件 (Atoms)**：按钮 (Button), 输入框 (Input), 图标 (Icon), 标签 (Tag), 加载指示器 (Spinner)。
* **分子组件 (Molecules)**：搜索框 (SearchBox), 特性卡片 (FeatureCard), 消息气泡 (MessageBubble), 用户头像 (UserAvatar)。
* **有机体组件 (Organisms)**：导航栏 (NavigationBar), 英雄区 (HeroSection), 特性列表 (FeatureList), **聊天窗口 (ChatWindow)** (包含消息列表、输入区等), 页脚 (Footer)。
* **模板组件 (Templates)**：定义整体页面布局，如单页滚动布局。
* **页面组件 (Pages)**：对应具体的路由入口，组合有机体组件构成完整页面。

**关键组件：ChatWindow (聊天窗口)**
* `ChatWindow.tsx`: 主容器，管理整体聊天逻辑和状态。
    * `MessageList.tsx`: 渲染聊天消息历史。
        * `MessageBubble.tsx`: 单条消息的气泡（区分用户和AI）。
    * `ChatInput.tsx`: 用户输入区域，包含文本框和发送按钮。
    * `TypingIndicator.tsx`: AI回复时的打字动画。

## 6. 状态管理

* **聊天状态**：
    * 消息列表 (an array of message objects, each with sender, content, timestamp)。
    * 输入框当前内容。
    * 模型加载状态 (idle, loading, error)。
    * API 错误信息。
    * 这些状态推荐使用 `useState` 和 `useReducer` (对于复杂逻辑) 或 Zustand/Redux Toolkit 进行管理，集中在 `ChatWindow` 组件或其父组件中，或全局 Store。
* **UI 状态**：
    * 当前主题 (light/dark) - 若实现。
    * 导航栏的显示/隐藏状态。
    * 这些通常可以用 React Context 或简单的 `useState` 管理。

## 7. API 集成 (SiliconFlow)

* **ChatInput 组件**：当用户提交问题后，调用一个异步函数。
* **异步函数**：
    1.  将用户消息添加到本地状态的消息列表中，并立即更新UI。
    2.  设置加载状态为 `true` (显示打字指示器)。
    3.  构造发送到 SiliconFlow API 的请求体 (payload)，通常包含用户输入、历史对话（如果API支持上下文理解）、以及可能的其他参数。
    4.  使用 `axios` 或 `Workspace` 发送 POST 请求到 SiliconFlow API 端点。
    5.  **成功处理**：
        * 获取API返回的AI回复。
        * 将AI回复添加到本地状态的消息列表中。
        * 设置加载状态为 `false`。
    6.  **错误处理**：
        * 捕获API请求错误或业务逻辑错误。
        * 在UI上向用户显示友好的错误提示 (e.g., "模型当前不可用，请稍后再试")。
        * 设置加载状态为 `false`。
* **安全性**：API密钥等敏感信息不应硬编码在前端。如果需要认证，应通过后端代理或 Next.js API Routes 处理。
* **流式传输 (Streaming)**：如果 SiliconFlow API 支持流式响应（即逐字或逐句返回答案，而非一次性返回完整答案），强烈建议在前端实现流式接收和展示。这能显著提升用户感知到的响应速度，使交互更自然。可以使用 `Workspace` API 和 `ReadableStream` 来处理。

## 8. 响应式设计与适配

* 采用“移动优先”的设计策略或“桌面优先”后逐步适配小屏幕。
* 使用 Tailwind CSS 的响应式断点 (sm, md, lg, xl, 2xl) 来调整布局、字号、间距和元素的显示/隐藏。
* **英雄区**：在小屏幕上，可能需要简化动画或调整排版。
* **聊天窗口**：在小屏幕上，输入框和消息显示区域需要良好适配，确保操作便捷。可能需要考虑键盘弹出时对布局的影响。
* **导航栏**：在小屏幕上通常会折叠成汉堡菜单。
* 测试确保在主流浏览器和设备尺寸上均有良好表现。

## 9. 性能优化

* **代码分割**：Next.js 自动进行代码分割。利用 `next/dynamic` 进行组件的动态导入，特别是对于大型组件或非首屏关键组件（如复杂的动画组件）。
* **图片优化**：使用 `next/image` 组件进行图片优化（自动格式转换、懒加载、响应式尺寸）。
* **懒加载**：对于非首屏内容区块（如功能特性、使用场景等），可以使用 Intersection Observer API 或 Framer Motion 的 `whileInView` 来实现懒加载和动画的触发。
* **减少不必要的重渲染**：使用 `React.memo` 对组件进行优化，结合 `useCallback` 和 `useMemo` 优化函数和值的创建。
* **CSS 优化**：Tailwind CSS 的 JIT 模式会按需生成 CSS，减小最终 CSS 文件体积。
* **字体优化**：使用 `next/font` 优化字体加载。
* **API 调用优化**：避免不必要的 API 请求。

## 10. 可访问性 (Accessibility - a11y)

* 遵循 WCAG 2.1 AA 级标准。
* 确保所有交互元素都可以通过键盘访问。
* 为图片提供 `alt` 文本。
* 确保足够的颜色对比度。
* 使用语义化的 HTML 标签。
* 为动态内容（如聊天更新）使用 ARIA live regions，以便屏幕阅读器可以播报。

## 11. 总结与前端整体概述

獬豸 Themis AI 网站前端旨在通过专业、现代且富有吸引力的设计，结合流畅的动画效果和直观的交互体验，有效地介绍法学特化大语言模型，并引导用户积极使用其聊天功能。

* **核心体验**：用户访问网站，首先被专业且带有精美动画的英雄区吸引，了解到模型的核心价值。随着向下滚动，模型的功能特性、使用场景通过动态效果逐一呈现。最终，用户可以无缝过渡到占据重要版面的聊天窗口，与 SiliconFlow 驱动的法学 LLM 进行实时、高效的互动。
* **技术支撑**：Next.js、React、TypeScript 和 Tailwind CSS 提供了坚实的基础，Framer Motion 则为网站注入了生动的动画灵魂。
* **设计要点**：专业性与现代感的平衡，清晰的信息层级，以及高度易用的聊天界面是设计的重中之重。动画效果应增强体验而非干扰。
* **关键挑战**：
    * 在保持专业性的前提下，设计出既美观又有吸引力的动画效果。
    * 确保聊天窗口在各种设备上的完美响应和流畅交互。
    * 与 SiliconFlow API 的稳定、高效集成，包括可能的流式响应处理。
    * 清晰传达模型的局限性和免责声明。

本指南旨在为 AI 或开发者提供一个清晰的蓝图，以构建一个高质量的 獬豸 Themis AI 网站前端。在开发过程中，鼓励根据实际效果和用户反馈进行迭代和优化。
